server:
  port: 8001

microservice:
  product: http://PRODUCT-SERVICE/product/
  payment: http://PAYMENTS-SERVICE/payment/

spring:
  application:
    name: ORDER-SERVICE
  datasource:
    url: jdbc:h2:mem:order-db
    driverClassName : org.h2.Driver
    username : sa
    password: sa
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-11896815.okta.com/oauth2/default
      client:
        registration:
          internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            clientId: 0oadhbzuwrShYijOi5d7
            clientSecret: pwjd6D0-ZI2pATI6ynZr_S2ggQZeLQ-IPVUx1qil8Dx2sstmfB_052j-uDEfpghm
        provider:
          okta:
            issuerUri: https://dev-11896815.okta.com/oauth2/default



eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
 #   eureka-service-url-poll-interval-seconds: 1
    service-url:
      defaultZone : http://localhost:8761/eureka

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    sampling:
      probability: 1.0


okta:
  oauth2:
    issuer: https://dev-11896815.okta.com/oauth2/default
    audience: api://default