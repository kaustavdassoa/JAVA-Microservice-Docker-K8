server:
  port: 9090

spring:
  application:
    name: CLOUD-GATEWAY
  cloud:
    gateway:
      routes:
        - id : ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri : forward:/orderServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1
#                redis-rate-limiter.requestedTokens: 1
        - id: PAYMENTS-SERVICE
          uri: lb://PAYMENTS-SERVICE
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name : PAYMENTS-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
#  data:
#    redis:
#      host: localhost
#      port: 6379

okta:
  oauth2:
    issuer: https://dev-11896815.okta.com/oauth2/default
    audience: api://default
    client-id: 0oadhbzuwrShYijOi5d7
    client-secret: pwjd6D0-ZI2pATI6ynZr_S2ggQZeLQ-IPVUx1qil8Dx2sstmfB_052j-uDEfpghm
    scopes: openid,profile,email,offline_access




eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    #   eureka-service-url-poll-interval-seconds: 1
    service-url:
      defaultZone : http://localhost:8761/eureka

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    root : debug


management:
  tracing:
    sampling:
      probability: 1.0


